#!/usr/bin/env python3
import subprocess
import json
import os
from dotenv import load_dotenv

load_dotenv()

def run_glab_command(cmd):
    """‡∏£‡∏±‡∏ô glab command ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå"""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, check=True)
        return result.stdout.strip()
    except subprocess.CalledProcessError as e:
        print(f"Error: {e.stderr}")
        return None

def main():
    """‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ GitLab CLI (glab) - ‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤"""
    print("üöÄ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ GitLab CLI (glab)")
    print("=" * 50)
    
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitLab URL ‡πÅ‡∏•‡∏∞ Token
    gitlab_url = os.getenv('GITLAB_URL')
    gitlab_token = os.getenv('GITLAB_API_TOKEN')
    
    if not gitlab_url or not gitlab_token:
        print("Error: ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GITLAB_URL ‡πÅ‡∏•‡∏∞ GITLAB_API_TOKEN ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env")
        return
    
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ glab config
    run_glab_command(f'glab config set gitlab_uri {gitlab_url}')
    run_glab_command(f'glab config set token {gitlab_token}')
    
    # ‡∏´‡∏≤ group ID
    group_output = run_glab_command('glab api groups --paginate | jq -r \'.[] | select(.name=="Research Repos") | .id\'')
    if not group_output:
        print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ group 'Research Repos'")
        return
    
    group_id = group_output.strip()
    print(f"‡πÄ‡∏à‡∏≠ group ID: {group_id}")
    
    # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ projects ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô branch ‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    script = f'''
    glab api groups/{group_id}/projects --paginate | jq -r '.[].id' | while read project_id; do
        project_name=$(glab api projects/$project_id | jq -r '.name')
        echo "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•: $project_name (ID: $project_id)"
        
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ trunk branch ‡πÑ‡∏´‡∏°
        if glab api projects/$project_id/repository/branches/trunk >/dev/null 2>&1; then
            # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ main branch ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏´‡∏°
            if ! glab api projects/$project_id/repository/branches/main >/dev/null 2>&1; then
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á main ‡∏à‡∏≤‡∏Å trunk
                glab api projects/$project_id/repository/branches --method POST --field branch=main --field ref=trunk
                # ‡∏ï‡∏±‡πâ‡∏á main ‡πÄ‡∏õ‡πá‡∏ô default
                glab api projects/$project_id --method PUT --field default_branch=main
                # ‡∏•‡∏ö trunk
                glab api projects/$project_id/repository/branches/trunk --method DELETE
                echo "  ‚úì ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô trunk ‚Üí main ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
            else
                echo "  - main branch ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
            fi
        else
            echo "  - ‡πÑ‡∏°‡πà‡∏°‡∏µ trunk branch"
        fi
        sleep 0.3
    done
    '''
    
    print("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ branch ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...")
    result = run_glab_command(script)
    
    if result is not None:
        print("\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡πÉ‡∏ä‡πâ GitLab CLI ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏Å")
    else:
        print("\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î")

if __name__ == "__main__":
    main() 